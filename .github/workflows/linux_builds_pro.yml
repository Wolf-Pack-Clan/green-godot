name: üêß Linux Builds [Production]
on: [workflow_call, workflow_dispatch]

# Global Settings
env:
  # Only used for the cache key. Increment version to force clean build.
  GODOT_BASE_BRANCH: 3.6
  SCONSFLAGS: optimize=speed use_static_cpp=yes debug_symbols=no lto=full

concurrency:
  group: ci-${{github.actor}}-${{github.head_ref || github.run_number}}-${{github.ref}}-linux
  cancel-in-progress: true

jobs:
  build-linux:
    # Stay one LTS before latest to increase portability of Linux artifacts.
    runs-on: "ubuntu-22.04"
    name: ${{ matrix.name }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Editor (target=release_debug, tools=yes)
            cache-name: linux-editor
            target: release_debug
            tools: true
            artifact: true

          - name: Template (target=release, tools=no)
            cache-name: linux-template
            target: release
            tools: false
            sconsflags: debug_symbols=no
            artifact: true

          - name: Template (target=release_debug, tools=no)
            cache-name: linux-template-debug
            target: release_debug
            tools: false
            sconsflags: debug_symbols=no
            artifact: true

          - name: Minimal template (target=release, tools=no, everything disabled)
            cache-name: linux-template-minimal
            target: release
            tools: false
            sconsflags: modules_enabled_by_default=no disable_3d=yes disable_advanced_gui=yes deprecated=no minizip=no debug_symbols=no
            artifact: true

    steps:
      - uses: actions/checkout@v4

      - name: Linux dependencies
        shell: bash
        run: |
          # Azure repositories are flaky, remove them.
          sudo rm -f /etc/apt/sources.list.d/{azure,microsoft}*
          sudo apt-get update
          # The actual dependencies.
          sudo apt-get install --no-install-recommends build-essential pkg-config libx11-dev \
              libxcursor-dev libxinerama-dev libgl1-mesa-dev libglu-dev libasound2-dev \
              libpulse-dev libdbus-1-dev libudev-dev libxi-dev libxrandr-dev yasm xvfb wget unzip \
              libspeechd-dev speech-dispatcher

      - name: Free disk space on runner
        run: |
          echo "Disk usage before:" && df -h
          sudo rm -rf /usr/local/lib/android
          echo "Disk usage after:" && df -h

      - name: Setup python and scons
        uses: ./.github/actions/godot-deps

      - name: Compilation
        uses: ./.github/actions/godot-build
        with:
          sconsflags: ${{ env.SCONSFLAGS }} ${{ matrix.sconsflags }}
          platform: linuxbsd
          target: ${{ matrix.target }}
          tools: ${{ matrix.tools }}

      - name: Prepare artifact
        if: ${{ matrix.artifact }}
        run: |
          strip bin/godot.*
          chmod +x bin/godot.*

      - name: Upload artifact
        uses: ./.github/actions/upload-artifact
        if: ${{ matrix.artifact }}
        with:
          name: ${{ matrix.cache-name }}
